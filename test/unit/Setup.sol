// SPDX-License-Identifier: GPL-3
pragma solidity 0.8.23;

import {Test} from "forge-std/Test.sol";
import {SAMM, ISAMM} from "../../src/SAMM.sol";
import {ModuleGuard} from "../../src/ModuleGuard.sol";
import {SafeProxyFactory} from "../../src/Safe/proxy/SafeProxyFactory.sol";

import {ISafe} from "../../src/Safe/interfaces/ISafe.sol";
import {IMinimalSafeModuleManager} from "../../src/Safe/interfaces/IMinimalSafeModuleManager.sol";
import {ArrHelper} from "../helpers/ArrHelper.sol";
import {IDKIMRegistry} from "../../src/interfaces/IDKIMRegistry.sol";
import {DKIMRegistry} from "../../src/utils/DKIMRegistry.sol";


contract Setup is Test {
    //////////////////////
    //    Constants     //
    //////////////////////

    // Safe in mainnet
    address internal constant SAFE_SINGLETON = 0x41675C099F32341bf84BFc5382aF534df5C7461a;
    SafeProxyFactory internal constant SAFE_PROXY_FACTORY = SafeProxyFactory(0x4e1DCf7AD4e460CfD30791CCC4F9c8a4f820ec67);

    // Helpers for tests
    uint256 internal constant DEFAULT_ROOT =
        13478250241025044241834632636828135155416924205892387731890373634766567630611; // From 10 default anvil accounts

    uint64 internal constant DEFAULT_THRESHOLD = 1;
    string internal constant DEFAULT_RELAYER = "ad@oxor.io";
    string internal constant DEFAULT_DOMAIN = "icloud.com";
    bytes32 internal constant DEFAULT_PUBKEY_HASH = 0x17655f0139cacecc80f4143fd28e7107ce6038374ea9d5cfcf5d3fb5ce0086e6;
    bytes internal constant DEFAULT_CALLDATA = abi.encodeWithSignature("getThreshold()");
    uint256 internal constant DEFAULT_DEADLINE = 4884818384; // Tue Oct 17 2124 05:59:44
    uint256 internal constant DEFAULT_SALT = uint256(keccak256(abi.encode(777)));
    bytes32 internal constant DEFAULT_TX_HASH = 0x09b086d54be973c0cae8f289b9a308969c3a0d336ba3000651cffcde84ce5fb3;

    //////////////////////
    // State Variables  //
    //////////////////////

    // Safe
    ISafe internal safe;

    // DKIM registry
    DKIMRegistry internal dkimRegistry;

    // SAM
    SAMM internal sam;
    SAMM internal samSingleton;
    SafeProxyFactory internal samProxyFactory;

    // Guard
    ModuleGuard internal guard;
    ModuleGuard internal guardSingleton;
    SafeProxyFactory internal guardProxyFactory;

    //////////////////////
    //    Modifiers     //
    //////////////////////

    modifier fork(string memory env_var) {
        string memory RPC_URL = vm.envString(env_var);
        vm.createSelectFork(RPC_URL);
        _;
    }

    modifier enableModuleForSafe(ISafe safeContract, SAMM module) {
        enableModule(address(safeContract), address(module));
        _;
    }

    //////////////////////
    //  Help functions  //
    //////////////////////

    function setUp() public virtual fork("MAINNET_RPC") {
        safe = createMinimalSafeWallet(ArrHelper._arr(address(this)), DEFAULT_THRESHOLD, DEFAULT_SALT);

        dkimRegistry = new DKIMRegistry(address(this));
        dkimRegistry.setDKIMPublicKeyHash(DEFAULT_DOMAIN, DEFAULT_PUBKEY_HASH);

        // Create SAM module
        samSingleton = new SAMM();
        samProxyFactory = new SafeProxyFactory();

        bytes memory initializeDataSAM =
            abi.encodeCall(SAMM.setup, (address(safe), DEFAULT_ROOT, DEFAULT_THRESHOLD, DEFAULT_RELAYER, address(dkimRegistry)));

        sam = createSAM(initializeDataSAM, DEFAULT_SALT);

        // Create Guard module
        guardSingleton = new ModuleGuard();
        guardProxyFactory = new SafeProxyFactory();

        bytes memory initializeDataGuard = abi.encodeCall(ModuleGuard.setup, (address(safe)));
        guard = createGuard(initializeDataGuard, DEFAULT_SALT);
    }

    function createSAM(bytes memory initData, uint256 salt) internal returns (SAMM newSAM) {
        return SAMM(
            address(samProxyFactory.createChainSpecificProxyWithNonce(address(samSingleton), initData, salt))
        );
    }

    function createGuard(bytes memory initData, uint256 salt) internal returns (ModuleGuard newGuard) {
        return ModuleGuard(
            address(guardProxyFactory.createChainSpecificProxyWithNonce(address(guardSingleton), initData, salt))
        );
    }

    // Create Safe wallet with minimal settings
    function createMinimalSafeWallet(address[] memory owners, uint64 threshold, uint256 salt)
        internal
        returns (ISafe newSafeWallet)
    {
        address optionalDelegateCallTo = address(0);
        bytes memory optionalDelegateCallData = "";

        address fallbackHandler = address(0);
        address paymentToken = address(0);
        uint256 payment = 0;
        address payable paymentReceiver = payable(address(0));

        bytes memory initializeDataSafe = abi.encodeCall(
            ISafe.setup,
            (
                owners,
                threshold,
                optionalDelegateCallTo,
                optionalDelegateCallData,
                fallbackHandler,
                paymentToken,
                payment,
                paymentReceiver
            )
        );

        return ISafe(
            address(SAFE_PROXY_FACTORY.createChainSpecificProxyWithNonce(SAFE_SINGLETON, initializeDataSafe, salt))
        );
    }

    error TestRevert_moduleNotEnabled();

    function enableModule(address safeContract, address module) internal {
        bytes memory cd = abi.encodeCall(IMinimalSafeModuleManager.enableModule, (module));
        sendTxToSafe(safeContract, address(this), safeContract, 0, cd, IMinimalSafeModuleManager.Operation.Call, 1e5);

        if (!ISafe(safeContract).isModuleEnabled(module)) {
            revert TestRevert_moduleNotEnabled();
        }
    }

    function sendTxToSafe(
        address safeContract,
        address sender,
        address to,
        uint256 value,
        bytes memory data,
        IMinimalSafeModuleManager.Operation operation,
        uint256 gasForExec
    ) internal returns (bool success) {
        bytes memory sig = encodeSenderSignature(sender);

        vm.prank(sender);
        return ISafe(safeContract).execTransaction{value: value}(
            to, value, data, operation, gasForExec, block.basefee, tx.gasprice, address(0), payable(address(this)), sig
        );
    }

    function encodeSenderSignature(address signer) internal pure returns (bytes memory) {
        bytes memory sig = new bytes(96);

        assembly {
            mstore(add(sig, 0x20), signer) // encode address of approver into r
            mstore(add(sig, 0x60), shl(248, 1)) // v, indicate that it is a approved hash
        }

        return sig;
    }

    // Since after each contract change, its bytecode changes, and thus previous proofs become invalid.
    // In order not to change the proofs in each test, we will make a default proof.
    function defaultCorrectProof() internal pure returns (ISAMM.Proof memory proof) {
        // Proof:
        // Tree constructed from all Anvil addresses
        // From: 0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266 (0 Anvil address)
        // Calldata: 0xe75235b8 (getThreshold())
        // Call type: Call
        // Nonce: 0
        // ChainId: 1 (ETH)
        return ISAMM.Proof({
            proof: bytes(hex""),
            commit: 0x2e1541ab92f485f0f6055c009ef01f394c1defc727a5701793dddfc3b03820d5,
            domain: DEFAULT_DOMAIN,
            pubkeyHash: DEFAULT_PUBKEY_HASH,
            is2048sig: true
        });
    }
}
